
upstream tomcat {
    ip_hash;
    server web:8080 fail_timeout=1s;
}

    # HTTP server
    # define server on port 80 (http)
    server {
        # listen       80;
        # server_name  localhost;
        listen 80 default_server;

        server_name _;

        # access_log  logs/host.access.log  main;
        # error_log logs/host.error.log debug;

	# force the client to use a secure connection
        location / {
           return 301 https://$server_name$request_uri;
        }

        error_page  404              /404.html;
        # redirect server error pages to the static page /50x.html
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

    }

    # HTTPS server
    # define server on port 443 (https)
    server {
        listen       443 ssl;
        server_name  localhost;

        access_log  /var/log/nginx.access.log  main;
        error_log /var/log/nginx.error.log debug;

# set max upload size
    client_max_body_size 3M;   

    include       mime.types;
    default_type  application/octet-stream;
	

    sendfile on;

    # enable compression
    gzip  on;
    gzip_static on;
    gzip_http_version 1.1;
    gzip_disable "MSIE [1-6]\.";

    # specify what data will be compressed
    #gzip_types text/plain text/html text/css text/javascript image/png image/x-icon application/x-javascript application/xml;

    # optimization for ssl sessions:
    # the ssl_session_cache reuses connections per client therefore minimizing the burden of the computationally expensive SSL handshakes
    # one megabyte of the cache (shared:SSL:1m;) contains about 4000 sessions. 100k about 400 
    ssl_session_cache    shared:SSL:100k;
    # reuse SSL session parameters to avoid SSL handshakes, time in minutes
    ssl_session_timeout  10m;

    # set keepalive connections to send several requests via one connection, time in seconds
    keepalive_timeout  120;
    
    # set the time that nginx will wait for the proxy connection
    proxy_connect_timeout 120s;
    proxy_read_timeout 120s;

	# turn on data encryption for secure connections
        # ssl                  on;
        ssl_certificate      /usr/local/ssl/my-server.crt;
        ssl_certificate_key  /usr/local/ssl/my-server.key;

	# directly serve the static files in the `includes` directory
        location ~ ^/OpenClinica/includes/(.*)$ {
            # add future expiry date to force caching of the file on the client
            expires max;
            add_header Cache-Control "public";
            alias /usr/local/tomcat/webapps/OpenClinica/includes/$1;
        }
 	# directly serve the static files in the `images` directory
        location ~ ^/OpenClinica/images/(.*)$ {
            # add future expiry date to force caching of the file on the client   
            expires max;
            add_header Cache-Control "public";
            alias /usr/local/tomcat/webapps/OpenClinica/images/$1;
        }
	# pass all other requests to Tomcat
        location /OpenClinica {
            proxy_pass http://tomcat/OpenClinica;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

    }
